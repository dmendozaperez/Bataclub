<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
     xmlns:wpfToolKit="http://schemas.microsoft.com/wpf/2008/toolkit"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- EXPANDER -->
    <Style TargetType="{x:Type Expander}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Background" Value="White"/>        
    </Style>

    <Style x:Key="GrayTable" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Background" Value="White"/>
    </Style>


    <!-- ******MAIN PAGE STYLES****** -->
    <!-- **************************** -->
    <!-- Primary Color Brushes -->
    <SolidColorBrush x:Key="NavigationBackgroundColorBrush" Color="#f6eeef"/>
    <SolidColorBrush x:Key="NavigationForegroundColorBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="HighLightColorBrush" Color="#FF0097FC"/>
    <SolidColorBrush x:Key="HoverHyperlinkForegroundColorBrush" Color="#FFEBF7FF"/>
    <SolidColorBrush x:Key="HoverHyperLinkBackgroundColorBrush" Color="#FF747474"/>
    <SolidColorBrush x:Key="BodyTextColorBrush" Color="#FF313131"/>

    <!-- LayoutRoot Grid Style -->
    <Style x:Key="LayoutRootGridStyle" TargetType="Grid">
        <Setter Property="Background" Value="#FFFFFFFF"/>
    </Style>

    <!-- Content Border Style -->
    <Style x:Key="ContentBorderStyle" TargetType="Border">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,0.045" StartPoint="0.5,0">
                    <GradientStop Color="#6FCCCCCC"/>
                    <GradientStop Color="#00CCCCCC" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FFFFFFFF"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="Margin" Value="0,62,0,0"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <!-- Content Frame Style -->
    <Style x:Key="ContentFrameStyle" TargetType="Frame">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="58,5"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>

    <!-- Navigation Outer StackPanel Style -->
    <Style x:Key="NavigationOuterGridStyle" TargetType="Grid"/>

    <!-- Navigation Grid Style -->
    <Style x:Key="NavigationGridStyle" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource NavigationBackgroundColorBrush}"/>
        <Setter Property="Height" Value="62"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <!-- Branding Border Style -->
    <Style x:Key="BrandingBorderStyle" TargetType="Border">
        <Setter Property="Height" Value="42"/>
        <Setter Property="Margin" Value="110,0,25,0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <!-- Branding StackPanel Style -->
    <Style x:Key="BrandingStackPanelStyle" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Orientation" Value="Horizontal"/>
    </Style>

    <!-- Logo Icon Style -->
    <Style x:Key="LogoIcon" TargetType="ContentControl">
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="Margin" Value="0,1,10,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid>
                        <Path Fill="{StaticResource HighLightColorBrush}" Stretch="Fill" Data="M8,0 C12.417931,2.8898596E-06 16,3.5814998 16,8 C16,12.417819 12.41803,16 8,16 C3.5816212,16 6.1398991E-06,12.417912 0,8 C1.5351338E-06,6.8954077 0.22386749,5.8431153 0.62867981,4.8860393 C0.65398115,4.82622 0.6799894,4.7667723 0.70669389,4.7077074 L0.73170543,4.6541386 L5.6357112,9.5581446 L3.7429986,11.450858 L3.7429986,11.493001 L11.669835,11.493001 L11.669835,3.5661643 L11.627691,3.5661643 L9.7349787,5.4588776 L4.8993444,0.62324351 L5.0666013,0.55490673 C5.5510159,0.36389247 6.0585575,0.21878535 6.5838675,0.12495131 C6.8465204,0.078035071 7.1136146,0.043936942 7.3844767,0.023327276 C7.5199089,0.013022465 7.6562829,0.0060896641 7.7935166,0.0026129775 C7.862133,0.00087448902 7.9309645,4.5157563E-08 8,0 z"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ApplicationName Style -->
    <Style x:Key="ApplicationNameStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource NavigationForegroundColorBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0,2,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <!--<Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Opacity="0.25" ShadowDepth="0"/>                
            </Setter.Value>
        </Setter>-->
    </Style>

    <!-- Links Border Style -->
    <Style x:Key="LinksBorderStyle" TargetType="Border">
        <Setter Property="Height" Value="42"/>
        <Setter Property="Margin" Value="15,0,15,0"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>

    <!-- Links StackPanel Style -->
    <Style x:Key="LinksStackPanelStyle" TargetType="StackPanel">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Orientation" Value="Horizontal"/>
    </Style>

    <!-- Link Style -->
    <Style x:Key="LinkStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource HighLightColorBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF9D9492"/>
        <Setter Property="Foreground" Value="{StaticResource NavigationForegroundColorBrush}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="MinWidth" Value="78"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="8,4,8,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="ButtonGrid" Cursor="{TemplateBinding Cursor}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00" Value="0.95"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00" Value="10"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <!--<EasingDoubleKeyFrame-->
                                            <LinearDoubleKeyFrame KeyTime="00:00:00" Value="1"/>                                            
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00" Value="0.8"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00" Value="5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <HorizontalAlignment>Center</HorizontalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <VerticalAlignment>Center</VerticalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <HorizontalAlignment>Center</HorizontalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <VerticalAlignment>Center</VerticalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LinkStates">
                                <VisualState x:Name="ActiveLink">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ActiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InactiveLink"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.35"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="FocusVisualElement" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2" Opacity="0" Margin="-1" RadiusX="1" RadiusY="1"/>
                        <Border x:Name="ActiveBorder" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="0"/>
                        <Border x:Name="ContentBorder" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Opacity="1">
                            <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Opacity="1">
                                <ContentPresenter.Effect>
                                    <!--<DropShadowEffect ShadowDepth="0" Color="#FF484848" Opacity="0.65" BlurRadius="0"/>-->
                                    <DropShadowEffect ShadowDepth="0" Color="#FF484848" BlurRadius="0"/>
                                </ContentPresenter.Effect>
                            </ContentPresenter>
                        </Border>
                        <Border x:Name="InteractiveBorder" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Background="{StaticResource HoverHyperLinkBackgroundColorBrush}" BorderThickness="1,1,1,1" Opacity="0" BorderBrush="{StaticResource HoverHyperLinkBackgroundColorBrush}" CornerRadius="1,1,1,1"/>
                        <Border x:Name="InteractiveElementBorder" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed">
                            <TextBlock x:Name="InteractiveElement" Foreground="{StaticResource HoverHyperlinkForegroundColorBrush}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}"/>
                        </Border>
                        <TextBlock x:Name="DisabledOverlay" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" Foreground="#FFAAAAAA" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Divider Style -->
    <Style x:Key="DividerStyle" TargetType="Rectangle">
        <Setter Property="Fill" Value="#1FFFFFFF"/>
        <!--<Setter Property="Stroke" Value="Transparent"/>-->
        <Setter Property="Width" Value="1"/>
        <Setter Property="Margin" Value="2,4,2,4"/>
    </Style>
    
    <Style x:Key="DividerStyleSmoke" TargetType="Rectangle">
        <Setter Property="Fill" Value="#FFFFFF"/>
        <!--<Setter Property="Stroke" Value="Transparent"/>-->
        <Setter Property="Width" Value="1"/>
        <Setter Property="Margin" Value="2,4,2,4"/>
    </Style>
    
    <Style x:Key="DividerStyleDark" TargetType="Rectangle">
        <Setter Property="Fill" Value="#312220"/>
        <!--<Setter Property="Stroke" Value="Transparent"/>-->
        <Setter Property="Width" Value="1"/>
        <Setter Property="Margin" Value="0,2,0,2"/>
    </Style>
    
    <Style x:Key="DividerStyleBlack" TargetType="Rectangle">
        <Setter Property="Fill" Value="Black"/>
        <!--<Setter Property="Stroke" Value="Transparent"/>-->
        <Setter Property="Width" Value="1"/>
        <Setter Property="Margin" Value="2,4,2,4"/>
    </Style>
    
    <!-- Divider Style horizontal aligment -->
    <Style x:Key="DividerStyleH" TargetType="Rectangle">
        <Setter Property="Fill" Value="Silver"/>
        <Setter Property="Width" Value="1"/>
        <Setter Property="Margin" Value="2,4,2,4"/>
    </Style>

    <!-- ******CONTENT PAGE STYLES****** -->
    <!-- ******************************* -->
    <!-- Page Style -->
    <Style x:Key="PageStyle" TargetType="Page"/>

    <!-- Page ScrollViewer Style -->
    <Style x:Key="PageScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0,1,0,1"/>
        <Setter Property="Margin" Value="-58,-5,-58,-5"/>
        <Setter Property="Padding" Value="35,-10,33,-10"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
    </Style>

    <!-- Content Panel Style -->
    <Style x:Key="ContentStackPanelStyle" TargetType="StackPanel"/>

    <!-- Header Text Style -->
    <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource BodyTextColorBrush}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Margin" Value="0,15,0,4"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Content Text Style -->
    <Style x:Key="ContentTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource BodyTextColorBrush}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Margin" Value="0,2,0,2"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>


    <!-- **********LOGIN STYLES********* -->
    <!-- ******************************* -->
    <!-- Login Container Style -->
    <Style x:Key="BarBottonHeader" TargetType="Border">
        <Setter Property="Background" Value="#FF949290"/>
        <Setter Property="Margin" Value="0,63,0,0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="#FFFFFFFF"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <!-- Login Panel Style -->
    <Style x:Key="LoginPanelStyle" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
    </Style>

    <!-- Spacer Style -->
    <Style x:Key="SpacerStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="6,2"/>
    </Style>

    <!-- Welcome Text Style -->
    <Style x:Key="WelcomeTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="0,2,0,0"/>
    </Style>

    <!-- LoginRegister Link Style -->
    <Style x:Key="LoginRegisterLinkStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0,2,30,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Cursor="{TemplateBinding Cursor}" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Mouseover_Pressed" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Mouseover_Pressed" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <HorizontalAlignment>Center</HorizontalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Mouseover_Pressed" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <TextBlock HorizontalAlignment="Stretch" x:Name="Mouseover_Pressed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed" Canvas.ZIndex="1" Foreground="{StaticResource NavigationBackgroundColorBrush}" Text="{TemplateBinding Content}"/>
                        <TextBlock HorizontalAlignment="Stretch" x:Name="DisabledOverlay" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed" Canvas.ZIndex="1" Foreground="#FFAAAAAA" Text="{TemplateBinding Content}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ESTILO DE BOTON CON IMAGEN -->
    <Style x:Key="ButtonLinkStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0,2,30,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Cursor="{TemplateBinding Cursor}" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">                                    
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <HorizontalAlignment>Center</HorizontalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>                            
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <TextBlock HorizontalAlignment="Stretch" x:Name="Mouseover_Pressed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed" Canvas.ZIndex="1" Foreground="{StaticResource NavigationBackgroundColorBrush}" Text="{TemplateBinding Content}"/>
                        <TextBlock HorizontalAlignment="Stretch" x:Name="DisabledOverlay" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed" Canvas.ZIndex="1" Foreground="#FFAAAAAA" Text="{TemplateBinding Content}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Login PasswordBox Style -->
    <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="MaxLength" Value="50"/>
    </Style>

    <!-- Login Controls StackPanel Style -->
    <Style x:Key="LoginControlsStackPanelStyle" TargetType="StackPanel">
        <Setter Property="Margin" Value="0,0,0,8"/>
    </Style>

    <!-- Login Control Style -->
    <Style x:Key="LoginControlStyle" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Margin" Value="0,4,0,2"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <!-- Login Text Style -->
    <Style x:Key="LoginTextStyle" TargetType="TextBlock">
        <Setter Property="Width" Value="60"/>
        <Setter Property="Margin" Value="0,0,6,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Right"/>
    </Style>

    <!-- Login TextBox Style -->
    <Style x:Key="LoginTextBoxStyle" TargetType="TextBox">
        <Setter Property="Width" Value="316"/>
        <Setter Property="MaxLength" Value="50"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Login PasswordBox Style -->
    <Style x:Key="LoginPSBoxStyle" TargetType="PasswordBox">
        <Setter Property="Width" Value="316"/>
    </Style>

    <!-- Comment Style -->
    <Style x:Key="CommentStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="9"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Margin" Value="3,0,0,0"/>
    </Style>

    <!-- Register Login Link Panel Style -->
    <Style x:Key="RegisterLoginLinkPanelStyle" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="0,3,0,0"/>
    </Style>

    <!-- Register Login Button Style -->
    <Style x:Key="RegisterLoginButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Margin" Value="0,0,79,1"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
    </Style>
    
    <!-- STYLES FOR DATAGRIDS -->
    <!--  -->
    
    <!-- <sys:String x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type wpfToolKit:DataGrid},ResourceId=Theme}">Aero.NormalColor</sys:String> -->    
    <!-- <sys:String x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type wpfToolKit:DataGrid},ResourceId=Theme}">
        Royale.NormalColor</sys:String> -->
    <!-- DataGrid Style -->
    <Style x:Key="{x:Type wpfToolKit:DataGrid}" TargetType="{x:Type wpfToolKit:DataGrid}">
        <!--<Setter Property="Background" Value="{StaticResource DefaultControlBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultControlForegroundBrush}"/>
        <Setter Property="AlternatingRowBackground" Value="{StaticResource AlternateRowBackgroundBrush}" />
        -->
        <Setter Property="BorderBrush" Value="#FF688CAF" />
        <Setter Property="HorizontalGridLinesBrush" Value="#FFCEDFF6" />
        <Setter Property="VerticalGridLinesBrush" Value="#FFCEDFF6" />        
    </Style>

    <!-- Right Aligned DataGridColumnHeader Style -->
    <Style x:Key="RightAlignedColumnHeaderStyle"
       TargetType="{x:Type wpfToolKit:DataGridColumnHeader}">       
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>
    <!-- Center Aligned DataGridColumnHeader Style -->
    <Style x:Key="CenterAlignedColumnHeaderStyle"
       TargetType="{x:Type wpfToolKit:DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>
    <!-- Right Aligned DataGridCell Style -->
    <Style x:Key="RightAlignedCellStyle" TargetType="{x:Type wpfToolKit:DataGridCell}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type wpfToolKit:DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Right"
                                          VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Center Aligned DataGridCell Style SoftYellowBackGround -->
    <Style x:Key="CenterAlignedCellStyleY" TargetType="{x:Type wpfToolKit:DataGridCell}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type wpfToolKit:DataGridCell}">
                    <Grid Background="#FFFF94">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Center Aligned DataGridCell Style SoftBlueBackGround -->
    <Style x:Key="CenterAlignedCellStyleB" TargetType="{x:Type wpfToolKit:DataGridCell}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type wpfToolKit:DataGridCell}">
                    <Grid Background="#B8DBFF">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- NO Center Aligned DataGridCell Style SoftBlueBackGround -->
    <Style x:Key="LeftAlignedCellStyleB" TargetType="{x:Type wpfToolKit:DataGridCell}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type wpfToolKit:DataGridCell}">
                    <Grid Background="#B8DBFF">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Left"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LeftAlignedCellStyle" TargetType="{x:Type wpfToolKit:DataGridCell}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type wpfToolKit:DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Left"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Center Aligned DataGridCell Style SoftRedBackGround -->
    <Style x:Key="CenterAlignedCellStyleR" TargetType="{x:Type wpfToolKit:DataGridCell}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type wpfToolKit:DataGridCell}">
                    <Grid Background="#FFA9A9">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Center Aligned DataGridCell Style NO Background-->
    <Style x:Key="CenterAlignedCellStyle" TargetType="{x:Type wpfToolKit:DataGridCell}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type wpfToolKit:DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--
  *****************************************************************************
  BRUSHES
  *****************************************************************************
  -->

        <!-- #Brushes -->
        <LinearGradientBrush x:Key="DataGridHeaderBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#739D20" Offset="0" />
            <GradientStop Color="#4F8300" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DataGridHeaderMouseOverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#90B321" Offset="0" />
            <GradientStop Color="#66A002" Offset="1" />
        </LinearGradientBrush>


        <LinearGradientBrush x:Key="DataGridHeaderBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#9ECD42" Offset="0" />
            <GradientStop Color="#3D5808" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DataGridHeaderSortedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#B58801" Offset="0" />
            <GradientStop Color="#681900" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DataGridHeaderSortedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#C46007" Offset="0" />
            <GradientStop Color="#AF2600" Offset="1" />
        </LinearGradientBrush>


        <SolidColorBrush x:Key="DataGridBackgroundBrush" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="DataGridSelectedBrush" Color="#3E4955" />

        <SolidColorBrush x:Key="DataGridSelectedForegroundBrush" Color="#FFFFFF" />

        <!--<SolidColorBrush x:Key="RowBackgroundAlternateBrush" Color="#F4F4EE" />-->



        <SolidColorBrush x:Key="DataGridValidationForegroundBrush" Color="Red" />
        <SolidColorBrush x:Key="DataGridValidationBackgroundBrush" Color="Transparent" />





        <!-- 	
    <SolidColorBrush x:Key="RowBackgroundBrush" Color="#BBF6FFE0" /> 
    <SolidColorBrush x:Key="RowBackgroundAlternateBrush" Color="#BBBDD684" />
	<SolidColorBrush x:Key="RowBackgroundAlternationIndex2Brush" Color="#BBE2F0D6" /> 
	<SolidColorBrush x:Key="RowBackgroundAlternationIndex3Brush" Color="#BB95AB63" /> 
	-->




        <SolidColorBrush x:Key="RowBackgroundBrush" Color="#44FFFF00" />
        <SolidColorBrush x:Key="RowBackgroundAlternateBrush" Color="#443D7EC5" />
        <SolidColorBrush x:Key="RowBackgroundAlternationIndex2Brush" Color="#44FF0000" />
        <SolidColorBrush x:Key="RowBackgroundAlternationIndex3Brush" Color="#44CCCCCC" />


        <SolidColorBrush x:Key="DataGridHorizontalLinesBrush" Color="Black" />


        <SolidColorBrush x:Key="RowHeaderIsMouseOverBrush" Color="#3E4955" />
        <LinearGradientBrush x:Key="XXXDataGridHeaderSortedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#B58801" Offset="0" />
            <GradientStop Color="#681900" Offset="1" />
        </LinearGradientBrush>


        <LinearGradientBrush x:Key="RowBackgroundSelectedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#4F8CC7" Offset="0" />
            <GradientStop Color="#1C4B7C" Offset="0.7" />
            <GradientStop Color="#042D5B" Offset="1" />
        </LinearGradientBrush>
        <!--<SolidColorBrush x:Key="RowHeaderSelectedBrush" Color="Red" />-->
        <SolidColorBrush x:Key="RowHeaderBackgroundBrush" Color="AliceBlue" />


        <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />

        <Style x:Key="DataGridRowStyle" TargetType="{x:Type wpfToolKit:DataGridRow}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type wpfToolKit:DataGridRow}">
                        <Border 
              x:Name="DGR_Border"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              SnapsToDevicePixels="True">
                            <wpfToolKit:SelectiveScrollingGrid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <wpfToolKit:DataGridCellsPresenter 
                  Grid.Column="1"
                   ItemsPanel="{TemplateBinding ItemsPanel}"
                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <wpfToolKit:DataGridRowHeader x:Name="RowHeader"
                  wpfToolKit:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"  
                  Grid.RowSpan="2"
                  Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type wpfToolKit:DataGrid}}, 
                               Path=HeadersVisibility, Converter={x:Static wpfToolKit:DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static wpfToolKit:DataGridHeadersVisibility.Row}}"/>
                                <Grid Grid.Column="1" Grid.Row="1" Name="Details" Visibility="Collapsed" >
                                    <wpfToolKit:DataGridDetailsPresenter />
                                </Grid>
                            </wpfToolKit:SelectiveScrollingGrid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Validation.HasError" Value="True" >
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="Red" ShadowDepth="0" BlurRadius="20" />
                                    </Setter.Value>

                                </Setter>
                                <Setter Property="BorderThickness" Value="3" />
                                <Setter Property="BorderBrush" Value="Red" />
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="FontSize" Value="16" />

                                <Setter Property="Background" TargetName="RowHeader" Value="Red" />
                            </Trigger>

                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Details" Property="Visibility" Value="Visible" />
                            </Trigger>


                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <!-- Have this style inherit from BasedOn="{StaticResource DataGridRowStyle}" 
    to get some more agressive Error notification  (bright, ugly reds :) 
    -->
        <Style x:Key="DataGridDemoRowStyle" 
              
   TargetType="{x:Type wpfToolKit:DataGridRow}">
            <Style.Triggers>
                <Trigger Property="AlternationIndex" Value="2" >
                    <Setter Property="Background" Value="{StaticResource RowBackgroundAlternationIndex2Brush}" />
                </Trigger>
                <Trigger Property="AlternationIndex" Value="3">
                    <Setter Property="Background" Value="{StaticResource RowBackgroundAlternationIndex3Brush}" />
                </Trigger>

                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="Background" Value="{StaticResource RowBackgroundSelectedBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>



        <!--<Style x:Key="DataGridColumnHeaderStyle" BasedOn="{StaticResource {x:Type Custom:DataGridColumnHeader}}"-->
        <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type wpfToolKit:DataGridColumnHeader}"  >
            <Setter Property="Background" Value="#88800080" />
            <Setter Property="Foreground" Value="White" />
            <Style.Triggers>
                <Trigger Property="SortDirection" Value="{x:Null}">
                    <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundBrush}" />
                    <Setter Property="BorderBrush"  Value="Transparent" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                        <Condition Property="SortDirection" Value="{x:Null}" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource DataGridHeaderMouseOverBackgroundBrush}" />
                    <Setter Property="BorderBrush" Value="{StaticResource DataGridHeaderBorderBrush}" />
                </MultiTrigger>

                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="true" />
                        <Condition Property="SortDirection" Value="{x:Null}" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource DataGridHeaderMouseOverBackgroundBrush}" />
                    <Setter Property="BorderBrush" Value="{StaticResource DataGridHeaderBorderBrush}" />
                </MultiTrigger>
                <Trigger Property="SortDirection" Value="Ascending">
                    <Setter Property="Background" Value="{StaticResource DataGridHeaderSortedBackgroundBrush}" />
                </Trigger>
                <Trigger Property="SortDirection" Value="Descending">
                    <Setter Property="Background" Value="{StaticResource DataGridHeaderSortedBackgroundBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <!-- Unchanged from generic.xaml. Included here just to avoid Implicit style reference to some external resource  -->
        <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Width" Value="8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="SizeWE"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!--DataGridColumnHeader -->
        <Style x:Key="DatagridColumnHeaderCustomTemplateStyle" 
           TargetType="{x:Type wpfToolKit:DataGridColumnHeader}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="28" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type wpfToolKit:DataGridColumnHeader}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="BackgroundBorder" BorderThickness="0,1,0,1" 
                                Background="{StaticResource DataGridHeaderSortedBackgroundBrush}" 
                                BorderBrush="{StaticResource DataGridHeaderSortedBorderBrush}" 
                                Grid.ColumnSpan="2" />
                            <ContentPresenter Margin="6,3,6,3" VerticalAlignment="Center" />
                            <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" 
                              Grid.Column="1" Width="8" Height="6" Fill="White" Margin="0,0,8,0" 
                              VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
                            <Rectangle Width="1" Fill="#AAC377" HorizontalAlignment="Right" Grid.ColumnSpan="2" />

                            <Rectangle Width="1" Margin="0,0,1,0" Fill="#425B10" 
                                   HorizontalAlignment="Right" Grid.ColumnSpan="2" />
                            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" 
                               Style="{StaticResource ColumnHeaderGripperStyle}"/>
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" 
                               Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="SortDirection" Value="{x:Null}">
                                <Setter TargetName="BackgroundBorder" Property="Background" 
                                    Value="{DynamicResource DataGridHeaderBackgroundBrush}" />
                                <Setter TargetName="BackgroundBorder" Property="BorderBrush"  
                                    Value="Transparent" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="SortDirection" Value="{x:Null}" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="BackgroundBorder" 
                                    Value="{StaticResource DataGridHeaderMouseOverBackgroundBrush}" />
                                <Setter Property="BorderBrush" TargetName="BackgroundBorder" 
                                    Value="{StaticResource DataGridHeaderBorderBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true" />
                                    <Condition Property="SortDirection" Value="{x:Null}" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="BackgroundBorder" Property="Background" 
                                    Value="{StaticResource DataGridHeaderMouseOverBackgroundBrush}" />
                                <Setter TargetName="BackgroundBorder" Property="BorderBrush" 
                                    Value="{StaticResource DataGridHeaderBorderBrush}" />
                            </MultiTrigger>

                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                <Setter TargetName="SortArrow" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="DisplayIndex" Value="0">
                                <Setter Property="Visibility" Value="Collapsed" 
                                    TargetName="PART_LeftHeaderGripper"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="DataGridRowHeaderBackgroundStyle" TargetType="{x:Type wpfToolKit:DataGridRowHeader}">
            <Setter Property="Background" Value="Gray" />
        </Style>



        <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Height" Value="8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="SizeNS"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Padding="{TemplateBinding Padding}"
                  Background="{TemplateBinding Background}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!--<Style x:Key="DataGridRowHeaderWMaxHeightStyle" TargetType="{x:Type Custom:DataGridRowHeader}">-->
        <Style x:Key="{x:Type wpfToolKit:DataGridRowHeader}" TargetType="{x:Type wpfToolKit:DataGridRowHeader}">
            <Setter Property="Background" Value="{StaticResource RowHeaderBackgroundBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type wpfToolKit:DataGridRowHeader}">
                        <Grid>
                            <wpfToolKit:DataGridHeaderBorder IsSelected="{TemplateBinding IsRowSelected}"
                                 IsHovered ="{TemplateBinding IsMouseOver}"
                                 IsPressed="{TemplateBinding IsPressed}"
                                 BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type wpfToolKit:DataGrid}}, 
                                    Path=HorizontalGridLinesBrush}"
                                 Background="{TemplateBinding Background}"                                     
                                 BorderThickness="0,1,0,0"
                                 Padding ="{TemplateBinding Padding}"
                                 Orientation="Horizontal"
                                 SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                 SeparatorBrush="{TemplateBinding SeparatorBrush}" Margin="0,-1,0,0">

                                <StackPanel Orientation="Horizontal">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="Center"/>
                                    <Control SnapsToDevicePixels="false"
Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type wpfToolKit:DataGridRow}}, 
        Path=(Validation.HasError), 
Converter={StaticResource bool2VisibilityConverter}}"
Template="{Binding RelativeSource={RelativeSource AncestorType={x:Type wpfToolKit:DataGridRow}}, 
        Path=ValidationErrorTemplate}" 
                 DataContext="{Binding
                    RelativeSource={RelativeSource  AncestorType={x:Type wpfToolKit:DataGridRow}},
                    Path=(Validation.Errors)[0].ErrorContent }"                                             
                    >
                                    </Control>
                                </StackPanel>
                            </wpfToolKit:DataGridHeaderBorder>
                            <Thumb x:Name="PART_TopHeaderGripper"
               VerticalAlignment="Top" Height="3"
               Style="{StaticResource RowHeaderGripperStyle}"/>
                            <Thumb x:Name="PART_BottomHeaderGripper"
               VerticalAlignment="Bottom" Height="3"
               Style="{StaticResource RowHeaderGripperStyle}"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource RowHeaderIsMouseOverBrush}" />
                            </Trigger>
                            <Trigger Property="IsRowSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource RowBackgroundSelectedBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <DrawingBrush x:Key="ErrorTemplateBrush" Viewbox="0,0,19,16.234" ViewboxUnits="Absolute" Stretch="Uniform">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <DrawingGroup>
                        <DrawingGroup.ClipGeometry>
                            <RectangleGeometry Rect="0,0,19,15.013"/>
                        </DrawingGroup.ClipGeometry>
                        <DrawingGroup.Transform>
                            <MatrixTransform Matrix="1,0,0,1,0,1.221"/>
                        </DrawingGroup.Transform>
                        <GeometryDrawing Brush="#FFFF0000" Geometry="M1.5264391E-07,15.013 C1.5264391E-07,15.013 11.278179,-0.92248435 15.061861,0.04208698 18.845545,1.0066585 14.340995,3.5782006 14.340995,3.5782006 L0.93643624,14.266332 z"/>
                    </DrawingGroup>
                    <DrawingGroup>
                        <DrawingGroup.Transform>
                            <MatrixTransform Matrix="1,0,0,1,2.832,1.183"/>
                        </DrawingGroup.Transform>
                        <GeometryDrawing Brush="#FFFF0000" Geometry="M0.021026401,0.27456573 C-0.46293162,1.5475728 7.5269286,11.804318 11.647909,14.61601 13.792494,16.079233 7.2223001,5.5069748 6.8034332,5.5069748 6.3845662,5.5069748 0.67633722,-1.4491695 0.021026401,0.27456573 z"/>
                    </DrawingGroup>
                    <DrawingGroup>
                        <DrawingGroup.Transform>
                            <MatrixTransform Matrix="1,0,0,1,10.032,2.432"/>
                        </DrawingGroup.Transform>
                        <GeometryDrawing Brush="#FFAB0404" Geometry="M5.7970878E-08,4.6522207 C5.7970878E-08,4.6522207 1.6666358,2.7735222 3.4580226,1.5508175 8.0168866,-1.5608194 6.1352206,0.97192629 6.1352206,0.97192629 L0.50724209,5.3830004 z"/>
                    </DrawingGroup>
                    <DrawingGroup>
                        <DrawingGroup.Transform>
                            <MatrixTransform Matrix="1,0,0,1,0.287,8.6"/>
                        </DrawingGroup.Transform>
                        <GeometryDrawing Brush="#FFAB0404" Geometry="M1.0157332,6.2297077 C1.0157332,6.2297077 4.4261989,2.8647916 6.179524,1.3212826 9.1318492,-1.2777427 8.2156135,0.75924876 8.2156135,0.75924876 L-5.2486112E-08,7.3609995 z"/>
                    </DrawingGroup>
                    <DrawingGroup>
                        <DrawingGroup.Transform>
                            <MatrixTransform Matrix="1,0,0,1,2.815,1.686"/>
                        </DrawingGroup.Transform>
                        <GeometryDrawing Brush="#FFAB0404" Geometry="M1.2093127,3.1798115 C1.2093127,3.1798115 -0.0013252577,2.3808527 2.2497043E-06,0.019419075 0.00022756806,-0.38130763 4.3080003,5.5527674 4.3080003,5.5527674 L3.8011218,6.059 z"/>
                    </DrawingGroup>
                    <DrawingGroup>
                        <DrawingGroup.Transform>
                            <MatrixTransform Matrix="1,0,0,1,7.841,8.657"/>
                        </DrawingGroup.Transform>
                        <GeometryDrawing Brush="#FFAB0404" Geometry="M0.68956735,1.51963 C0.68956735,1.51963 -0.93421078,0.24505694 0.80170192,0.0003053632 1.191087,-0.054595244 6.912,7.3039992 6.912,7.3039992 L5.2266264,5.9695358 z"/>
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>


        <ControlTemplate x:Key="ErrorTemplate2">
            <Grid  MinWidth="20" MinHeight="20" ToolTip="{Binding}">
                <Rectangle Fill="{StaticResource ErrorTemplateBrush}" >
                </Rectangle>
            </Grid>
        </ControlTemplate>

        <Style x:Key="DataGridCellStyle" TargetType="{x:Type wpfToolKit:DataGridCell}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type wpfToolKit:DataGridCell}">
                        <Border Background="Transparent" 
                  BorderBrush="{TemplateBinding BorderBrush}"  
                  BorderThickness="0" 
                  SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="RowDetailsTemplate">
            <Grid TextBlock.Foreground="White">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Text="RowDetails Go here"  Grid.Row="0"/>
                <TextBlock Text="{Binding }" Grid.Row="1"/>
            </Grid>

        </DataTemplate>

        <!-- END CONFIRMED -->













        <!-- DataGrid -->
        <Style x:Key="DataGridStyle1" TargetType="{x:Type wpfToolKit:DataGrid}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1,1,1,1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type wpfToolKit:DataGrid}">
                        <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Button Width="{Binding Path=CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type wpfToolKit:DataGrid}}}" Focusable="False"
                                                Command="{x:Static wpfToolKit:DataGrid.SelectAllCommand}">
                                                <Button.Visibility>
                                                    <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type wpfToolKit:DataGrid}}">
                                                        <Binding.ConverterParameter>
                                                            <wpfToolKit:DataGridHeadersVisibility>All</wpfToolKit:DataGridHeadersVisibility>
                                                        </Binding.ConverterParameter>
                                                    </Binding>
                                                </Button.Visibility>
                                                <Button.Template>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" x:Name="Border" SnapsToDevicePixels="True"/>
                                                            <Polygon Fill="#FF000000" Stretch="Uniform" HorizontalAlignment="Right" Margin="8,8,3,3" x:Name="Arrow" VerticalAlignment="Bottom" Opacity="0.15" Points="0,10 10,10 10,0"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Button.Template>

                                            </Button>
                                            <wpfToolKit:DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1">
                                                <wpfToolKit:DataGridColumnHeadersPresenter.Visibility>
                                                    <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type wpfToolKit:DataGrid}}">
                                                        <Binding.ConverterParameter>
                                                            <wpfToolKit:DataGridHeadersVisibility>Column</wpfToolKit:DataGridHeadersVisibility>
                                                        </Binding.ConverterParameter>
                                                    </Binding>
                                                </wpfToolKit:DataGridColumnHeadersPresenter.Visibility>
                                            </wpfToolKit:DataGridColumnHeadersPresenter>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2" Grid.Row="1" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="2" Grid.Row="1" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding Path=NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type wpfToolKit:DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsGrouping" Value="True">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <!--  -->
        <Style x:Key="DataGridDemoStyle"  TargetType="{x:Type wpfToolKit:DataGrid}">
            <Setter Property="AlternatingRowBackground" Value="{StaticResource RowBackgroundAlternateBrush}" />
            <Setter Property="BorderBrush" Value="#FF688CAF"/>
            <Setter Property="Background" Value="{DynamicResource bearBrush}" />
            <Setter Property="ColumnHeaderHeight" Value="50" />
            <Setter Property="HeadersVisibility" Value="All" />
            <Setter Property="RowBackground" Value="{StaticResource RowBackgroundBrush}" />
            <Setter Property="AlternationCount" Value="4" />
            <Setter Property="RowStyle" Value="{StaticResource DataGridDemoRowStyle}" />

            <Setter Property="RowHeaderWidth" Value="50" />
            <Setter Property="RowHeight" Value="22" />
            <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DataGridHorizontalLinesBrush}" />
            <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}" />
            <Setter Property="RowDetailsTemplate" Value="{StaticResource RowDetailsTemplate}" />
            <!-- The below line did not work.. I ended up needing an Implicit Style -->
            <!-- <Setter Property="RowHeaderStyle" Value="{StaticResource DataGridRowHeaderWMaxHeightStyle}" /> -->

            <Setter Property="RowValidationErrorTemplate" Value="{StaticResource ErrorTemplate2}" />
            <Setter Property="ColumnHeaderStyle" Value="{StaticResource DatagridColumnHeaderCustomTemplateStyle}" />


        </Style>


</ResourceDictionary>