//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proy_PruebaMetriCard.ServicioConversion {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioConversion.IServicioConversion")]
    public interface IServicioConversion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/RegistrarDocumento", ReplyAction="http://tempuri.org/IServicioConversion/RegistrarDocumentoResponse")]
        Basico_Metricard.ServicioConversion.RespuestaServicio RegistrarDocumento(Basico_Metricard.ServicioConversion.Documento documento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/AgregarTienda", ReplyAction="http://tempuri.org/IServicioConversion/AgregarTiendaResponse")]
        Basico_Metricard.ServicioConversion.RespuestaServicio AgregarTienda(Basico_Metricard.ServicioConversion.Tienda tienda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/ConsultarTiendaPorId", ReplyAction="http://tempuri.org/IServicioConversion/ConsultarTiendaPorIdResponse")]
        Basico_Metricard.ServicioConversion.Tienda ConsultarTiendaPorId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/ConsultarTiendaPorCodigo", ReplyAction="http://tempuri.org/IServicioConversion/ConsultarTiendaPorCodigoResponse")]
        Basico_Metricard.ServicioConversion.Tienda ConsultarTiendaPorCodigo(string codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/ActualizarTienda", ReplyAction="http://tempuri.org/IServicioConversion/ActualizarTiendaResponse")]
        Basico_Metricard.ServicioConversion.RespuestaServicio ActualizarTienda(Basico_Metricard.ServicioConversion.Tienda tienda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/ConsultarCampanaPorId", ReplyAction="http://tempuri.org/IServicioConversion/ConsultarCampanaPorIdResponse")]
        Basico_Metricard.ServicioConversion.Campana ConsultarCampanaPorId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/ConsultarCampanaPorNombre", ReplyAction="http://tempuri.org/IServicioConversion/ConsultarCampanaPorNombreResponse")]
        Basico_Metricard.ServicioConversion.Campana[] ConsultarCampanaPorNombre(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/ExisteCampanaPorCodigo", ReplyAction="http://tempuri.org/IServicioConversion/ExisteCampanaPorCodigoResponse")]
        bool ExisteCampanaPorCodigo(string codigoCampana);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/CrearCampana", ReplyAction="http://tempuri.org/IServicioConversion/CrearCampanaResponse")]
        Basico_Metricard.ServicioConversion.RespuestaServicio CrearCampana(Basico_Metricard.ServicioConversion.Campana campana);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/AgregarTipoProducto", ReplyAction="http://tempuri.org/IServicioConversion/AgregarTipoProductoResponse")]
        Basico_Metricard.ServicioConversion.RespuestaServicio AgregarTipoProducto(Basico_Metricard.ServicioConversion.TipoProducto tipoProducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/ActualizarTipoProducto", ReplyAction="http://tempuri.org/IServicioConversion/ActualizarTipoProductoResponse")]
        Basico_Metricard.ServicioConversion.RespuestaServicio ActualizarTipoProducto(Basico_Metricard.ServicioConversion.TipoProducto tipoProducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/ConsultarTipoProducto", ReplyAction="http://tempuri.org/IServicioConversion/ConsultarTipoProductoResponse")]
        Basico_Metricard.ServicioConversion.TipoProducto ConsultarTipoProducto(string codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/AgregarProducto", ReplyAction="http://tempuri.org/IServicioConversion/AgregarProductoResponse")]
        Basico_Metricard.ServicioConversion.RespuestaServicio AgregarProducto(Basico_Metricard.ServicioConversion.Producto producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/ActualizarProducto", ReplyAction="http://tempuri.org/IServicioConversion/ActualizarProductoResponse")]
        Basico_Metricard.ServicioConversion.RespuestaServicio ActualizarProducto(Basico_Metricard.ServicioConversion.Producto producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/ConsultarProducto", ReplyAction="http://tempuri.org/IServicioConversion/ConsultarProductoResponse")]
        Basico_Metricard.ServicioConversion.Producto ConsultarProducto(string codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/ExisteConversion", ReplyAction="http://tempuri.org/IServicioConversion/ExisteConversionResponse")]
        bool ExisteConversion(string NumeroDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/ExisteConversionPorCupon", ReplyAction="http://tempuri.org/IServicioConversion/ExisteConversionPorCuponResponse")]
        bool ExisteConversionPorCupon(string CodigoDescuento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/AnularConversion", ReplyAction="http://tempuri.org/IServicioConversion/AnularConversionResponse")]
        bool AnularConversion(string NumeroDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/AnularConversionPorCupon", ReplyAction="http://tempuri.org/IServicioConversion/AnularConversionPorCuponResponse")]
        bool AnularConversionPorCupon(string CodigoDescuento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConversion/ConsultarCampanaPorCodigo", ReplyAction="http://tempuri.org/IServicioConversion/ConsultarCampanaPorCodigoResponse")]
        Basico_Metricard.ServicioConversion.Campana ConsultarCampanaPorCodigo(string codigo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioConversionChannel : Proy_PruebaMetriCard.ServicioConversion.IServicioConversion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioConversionClient : System.ServiceModel.ClientBase<Proy_PruebaMetriCard.ServicioConversion.IServicioConversion>, Proy_PruebaMetriCard.ServicioConversion.IServicioConversion {
        
        public ServicioConversionClient() {
        }
        
        public ServicioConversionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioConversionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioConversionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioConversionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Basico_Metricard.ServicioConversion.RespuestaServicio RegistrarDocumento(Basico_Metricard.ServicioConversion.Documento documento) {
            return base.Channel.RegistrarDocumento(documento);
        }
        
        public Basico_Metricard.ServicioConversion.RespuestaServicio AgregarTienda(Basico_Metricard.ServicioConversion.Tienda tienda) {
            return base.Channel.AgregarTienda(tienda);
        }
        
        public Basico_Metricard.ServicioConversion.Tienda ConsultarTiendaPorId(int id) {
            return base.Channel.ConsultarTiendaPorId(id);
        }
        
        public Basico_Metricard.ServicioConversion.Tienda ConsultarTiendaPorCodigo(string codigo) {
            return base.Channel.ConsultarTiendaPorCodigo(codigo);
        }
        
        public Basico_Metricard.ServicioConversion.RespuestaServicio ActualizarTienda(Basico_Metricard.ServicioConversion.Tienda tienda) {
            return base.Channel.ActualizarTienda(tienda);
        }
        
        public Basico_Metricard.ServicioConversion.Campana ConsultarCampanaPorId(int id) {
            return base.Channel.ConsultarCampanaPorId(id);
        }
        
        public Basico_Metricard.ServicioConversion.Campana[] ConsultarCampanaPorNombre(string nombre) {
            return base.Channel.ConsultarCampanaPorNombre(nombre);
        }
        
        public bool ExisteCampanaPorCodigo(string codigoCampana) {
            return base.Channel.ExisteCampanaPorCodigo(codigoCampana);
        }
        
        public Basico_Metricard.ServicioConversion.RespuestaServicio CrearCampana(Basico_Metricard.ServicioConversion.Campana campana) {
            return base.Channel.CrearCampana(campana);
        }
        
        public Basico_Metricard.ServicioConversion.RespuestaServicio AgregarTipoProducto(Basico_Metricard.ServicioConversion.TipoProducto tipoProducto) {
            return base.Channel.AgregarTipoProducto(tipoProducto);
        }
        
        public Basico_Metricard.ServicioConversion.RespuestaServicio ActualizarTipoProducto(Basico_Metricard.ServicioConversion.TipoProducto tipoProducto) {
            return base.Channel.ActualizarTipoProducto(tipoProducto);
        }
        
        public Basico_Metricard.ServicioConversion.TipoProducto ConsultarTipoProducto(string codigo) {
            return base.Channel.ConsultarTipoProducto(codigo);
        }
        
        public Basico_Metricard.ServicioConversion.RespuestaServicio AgregarProducto(Basico_Metricard.ServicioConversion.Producto producto) {
            return base.Channel.AgregarProducto(producto);
        }
        
        public Basico_Metricard.ServicioConversion.RespuestaServicio ActualizarProducto(Basico_Metricard.ServicioConversion.Producto producto) {
            return base.Channel.ActualizarProducto(producto);
        }
        
        public Basico_Metricard.ServicioConversion.Producto ConsultarProducto(string codigo) {
            return base.Channel.ConsultarProducto(codigo);
        }
        
        public bool ExisteConversion(string NumeroDocumento) {
            return base.Channel.ExisteConversion(NumeroDocumento);
        }
        
        public bool ExisteConversionPorCupon(string CodigoDescuento) {
            return base.Channel.ExisteConversionPorCupon(CodigoDescuento);
        }
        
        public bool AnularConversion(string NumeroDocumento) {
            return base.Channel.AnularConversion(NumeroDocumento);
        }
        
        public bool AnularConversionPorCupon(string CodigoDescuento) {
            return base.Channel.AnularConversionPorCupon(CodigoDescuento);
        }
        
        public Basico_Metricard.ServicioConversion.Campana ConsultarCampanaPorCodigo(string codigo) {
            return base.Channel.ConsultarCampanaPorCodigo(codigo);
        }
    }
}
