/* 
 * ICOMMKT Transactional API
 *
 * ICOMMKT Transactional API
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// InlineResponse20021Opens
    /// </summary>
    [DataContract]
    public partial class InlineResponse20021Opens :  IEquatable<InlineResponse20021Opens>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse20021Opens" /> class.
        /// </summary>
        /// <param name="_client">_client.</param>
        /// <param name="oS">oS.</param>
        /// <param name="platform">platform.</param>
        /// <param name="userAgent">userAgent.</param>
        /// <param name="readSeconds">readSeconds.</param>
        /// <param name="geo">geo.</param>
        /// <param name="messageID">messageID.</param>
        /// <param name="receivedAt">receivedAt.</param>
        /// <param name="tag">tag.</param>
        /// <param name="recipient">recipient.</param>
        public InlineResponse20021Opens(List<InlineResponse20020Client> _client = default(List<InlineResponse20020Client>), List<InlineResponse20020OS> oS = default(List<InlineResponse20020OS>), string platform = default(string), string userAgent = default(string), int? readSeconds = default(int?), List<InlineResponse20020Geo> geo = default(List<InlineResponse20020Geo>), string messageID = default(string), string receivedAt = default(string), string tag = default(string), string recipient = default(string))
        {
            this._Client = _client;
            this.OS = oS;
            this.Platform = platform;
            this.UserAgent = userAgent;
            this.ReadSeconds = readSeconds;
            this.Geo = geo;
            this.MessageID = messageID;
            this.ReceivedAt = receivedAt;
            this.Tag = tag;
            this.Recipient = recipient;
        }
        
        /// <summary>
        /// Gets or Sets _Client
        /// </summary>
        [DataMember(Name="Client", EmitDefaultValue=false)]
        public List<InlineResponse20020Client> _Client { get; set; }

        /// <summary>
        /// Gets or Sets OS
        /// </summary>
        [DataMember(Name="OS", EmitDefaultValue=false)]
        public List<InlineResponse20020OS> OS { get; set; }

        /// <summary>
        /// Gets or Sets Platform
        /// </summary>
        [DataMember(Name="Platform", EmitDefaultValue=false)]
        public string Platform { get; set; }

        /// <summary>
        /// Gets or Sets UserAgent
        /// </summary>
        [DataMember(Name="UserAgent", EmitDefaultValue=false)]
        public string UserAgent { get; set; }

        /// <summary>
        /// Gets or Sets ReadSeconds
        /// </summary>
        [DataMember(Name="ReadSeconds", EmitDefaultValue=false)]
        public int? ReadSeconds { get; set; }

        /// <summary>
        /// Gets or Sets Geo
        /// </summary>
        [DataMember(Name="Geo", EmitDefaultValue=false)]
        public List<InlineResponse20020Geo> Geo { get; set; }

        /// <summary>
        /// Gets or Sets MessageID
        /// </summary>
        [DataMember(Name="MessageID", EmitDefaultValue=false)]
        public string MessageID { get; set; }

        /// <summary>
        /// Gets or Sets ReceivedAt
        /// </summary>
        [DataMember(Name="ReceivedAt", EmitDefaultValue=false)]
        public string ReceivedAt { get; set; }

        /// <summary>
        /// Gets or Sets Tag
        /// </summary>
        [DataMember(Name="Tag", EmitDefaultValue=false)]
        public string Tag { get; set; }

        /// <summary>
        /// Gets or Sets Recipient
        /// </summary>
        [DataMember(Name="Recipient", EmitDefaultValue=false)]
        public string Recipient { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse20021Opens {\n");
            sb.Append("  _Client: ").Append(_Client).Append("\n");
            sb.Append("  OS: ").Append(OS).Append("\n");
            sb.Append("  Platform: ").Append(Platform).Append("\n");
            sb.Append("  UserAgent: ").Append(UserAgent).Append("\n");
            sb.Append("  ReadSeconds: ").Append(ReadSeconds).Append("\n");
            sb.Append("  Geo: ").Append(Geo).Append("\n");
            sb.Append("  MessageID: ").Append(MessageID).Append("\n");
            sb.Append("  ReceivedAt: ").Append(ReceivedAt).Append("\n");
            sb.Append("  Tag: ").Append(Tag).Append("\n");
            sb.Append("  Recipient: ").Append(Recipient).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse20021Opens);
        }

        /// <summary>
        /// Returns true if InlineResponse20021Opens instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse20021Opens to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse20021Opens input)
        {
            if (input == null)
                return false;

            return 
                (
                    this._Client == input._Client ||
                    this._Client != null &&
                    this._Client.SequenceEqual(input._Client)
                ) && 
                (
                    this.OS == input.OS ||
                    this.OS != null &&
                    this.OS.SequenceEqual(input.OS)
                ) && 
                (
                    this.Platform == input.Platform ||
                    (this.Platform != null &&
                    this.Platform.Equals(input.Platform))
                ) && 
                (
                    this.UserAgent == input.UserAgent ||
                    (this.UserAgent != null &&
                    this.UserAgent.Equals(input.UserAgent))
                ) && 
                (
                    this.ReadSeconds == input.ReadSeconds ||
                    (this.ReadSeconds != null &&
                    this.ReadSeconds.Equals(input.ReadSeconds))
                ) && 
                (
                    this.Geo == input.Geo ||
                    this.Geo != null &&
                    this.Geo.SequenceEqual(input.Geo)
                ) && 
                (
                    this.MessageID == input.MessageID ||
                    (this.MessageID != null &&
                    this.MessageID.Equals(input.MessageID))
                ) && 
                (
                    this.ReceivedAt == input.ReceivedAt ||
                    (this.ReceivedAt != null &&
                    this.ReceivedAt.Equals(input.ReceivedAt))
                ) && 
                (
                    this.Tag == input.Tag ||
                    (this.Tag != null &&
                    this.Tag.Equals(input.Tag))
                ) && 
                (
                    this.Recipient == input.Recipient ||
                    (this.Recipient != null &&
                    this.Recipient.Equals(input.Recipient))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this._Client != null)
                    hashCode = hashCode * 59 + this._Client.GetHashCode();
                if (this.OS != null)
                    hashCode = hashCode * 59 + this.OS.GetHashCode();
                if (this.Platform != null)
                    hashCode = hashCode * 59 + this.Platform.GetHashCode();
                if (this.UserAgent != null)
                    hashCode = hashCode * 59 + this.UserAgent.GetHashCode();
                if (this.ReadSeconds != null)
                    hashCode = hashCode * 59 + this.ReadSeconds.GetHashCode();
                if (this.Geo != null)
                    hashCode = hashCode * 59 + this.Geo.GetHashCode();
                if (this.MessageID != null)
                    hashCode = hashCode * 59 + this.MessageID.GetHashCode();
                if (this.ReceivedAt != null)
                    hashCode = hashCode * 59 + this.ReceivedAt.GetHashCode();
                if (this.Tag != null)
                    hashCode = hashCode * 59 + this.Tag.GetHashCode();
                if (this.Recipient != null)
                    hashCode = hashCode * 59 + this.Recipient.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
