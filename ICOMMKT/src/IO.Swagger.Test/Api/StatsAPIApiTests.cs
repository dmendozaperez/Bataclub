/* 
 * ICOMMKT Transactional API
 *
 * ICOMMKT Transactional API
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing StatsAPIApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class StatsAPIApiTests
    {
        private StatsAPIApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new StatsAPIApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of StatsAPIApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' StatsAPIApi
            //Assert.IsInstanceOfType(typeof(StatsAPIApi), instance, "instance is a StatsAPIApi");
        }

        
        /// <summary>
        /// Test GetBounceCounts
        /// </summary>
        [Test]
        public void GetBounceCountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string xTrxApiKey = null;
            //string tag = null;
            //string fromdate = null;
            //string todate = null;
            //var response = instance.GetBounceCounts(accept, xTrxApiKey, tag, fromdate, todate);
            //Assert.IsInstanceOf<InlineResponse20025> (response, "response is InlineResponse20025");
        }
        
        /// <summary>
        /// Test GetBrowserPlatformUsage
        /// </summary>
        [Test]
        public void GetBrowserPlatformUsageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string xTrxApiKey = null;
            //string tag = null;
            //string fromdate = null;
            //string todate = null;
            //var response = instance.GetBrowserPlatformUsage(accept, xTrxApiKey, tag, fromdate, todate);
            //Assert.IsInstanceOf<InlineResponse20034> (response, "response is InlineResponse20034");
        }
        
        /// <summary>
        /// Test GetBrowserUsage
        /// </summary>
        [Test]
        public void GetBrowserUsageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string xTrxApiKey = null;
            //string tag = null;
            //string fromdate = null;
            //string todate = null;
            //var response = instance.GetBrowserUsage(accept, xTrxApiKey, tag, fromdate, todate);
            //Assert.IsInstanceOf<InlineResponse20033> (response, "response is InlineResponse20033");
        }
        
        /// <summary>
        /// Test GetClickCounts
        /// </summary>
        [Test]
        public void GetClickCountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string xTrxApiKey = null;
            //string tag = null;
            //string fromdate = null;
            //string todate = null;
            //var response = instance.GetClickCounts(accept, xTrxApiKey, tag, fromdate, todate);
            //Assert.IsInstanceOf<InlineResponse20032> (response, "response is InlineResponse20032");
        }
        
        /// <summary>
        /// Test GetClickLocation
        /// </summary>
        [Test]
        public void GetClickLocationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string xTrxApiKey = null;
            //string tag = null;
            //string fromdate = null;
            //string todate = null;
            //var response = instance.GetClickLocation(accept, xTrxApiKey, tag, fromdate, todate);
            //Assert.IsInstanceOf<InlineResponse20035> (response, "response is InlineResponse20035");
        }
        
        /// <summary>
        /// Test GetEmailClientUsage
        /// </summary>
        [Test]
        public void GetEmailClientUsageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string xTrxApiKey = null;
            //string tag = null;
            //string fromdate = null;
            //string todate = null;
            //var response = instance.GetEmailClientUsage(accept, xTrxApiKey, tag, fromdate, todate);
            //Assert.IsInstanceOf<InlineResponse20030> (response, "response is InlineResponse20030");
        }
        
        /// <summary>
        /// Test GetEmailOpenCounts
        /// </summary>
        [Test]
        public void GetEmailOpenCountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string xTrxApiKey = null;
            //string tag = null;
            //string fromdate = null;
            //string todate = null;
            //var response = instance.GetEmailOpenCounts(accept, xTrxApiKey, tag, fromdate, todate);
            //Assert.IsInstanceOf<InlineResponse20028> (response, "response is InlineResponse20028");
        }
        
        /// <summary>
        /// Test GetEmailPlatformUsage
        /// </summary>
        [Test]
        public void GetEmailPlatformUsageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string xTrxApiKey = null;
            //string tag = null;
            //string fromdate = null;
            //string todate = null;
            //var response = instance.GetEmailPlatformUsage(accept, xTrxApiKey, tag, fromdate, todate);
            //Assert.IsInstanceOf<InlineResponse20029> (response, "response is InlineResponse20029");
        }
        
        /// <summary>
        /// Test GetEmailReadTimes
        /// </summary>
        [Test]
        public void GetEmailReadTimesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string xTrxApiKey = null;
            //string tag = null;
            //string fromdate = null;
            //string todate = null;
            //var response = instance.GetEmailReadTimes(accept, xTrxApiKey, tag, fromdate, todate);
            //Assert.IsInstanceOf<InlineResponse20031> (response, "response is InlineResponse20031");
        }
        
        /// <summary>
        /// Test GetOutboundOverview
        /// </summary>
        [Test]
        public void GetOutboundOverviewTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string xTrxApiKey = null;
            //string tag = null;
            //string fromdate = null;
            //string todate = null;
            //var response = instance.GetOutboundOverview(accept, xTrxApiKey, tag, fromdate, todate);
            //Assert.IsInstanceOf<InlineResponse20023> (response, "response is InlineResponse20023");
        }
        
        /// <summary>
        /// Test GetSentCounts
        /// </summary>
        [Test]
        public void GetSentCountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string xTrxApiKey = null;
            //string tag = null;
            //string fromdate = null;
            //string todate = null;
            //var response = instance.GetSentCounts(accept, xTrxApiKey, tag, fromdate, todate);
            //Assert.IsInstanceOf<InlineResponse20024> (response, "response is InlineResponse20024");
        }
        
        /// <summary>
        /// Test GetSpamComplaints
        /// </summary>
        [Test]
        public void GetSpamComplaintsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string xTrxApiKey = null;
            //string tag = null;
            //string fromdate = null;
            //string todate = null;
            //var response = instance.GetSpamComplaints(accept, xTrxApiKey, tag, fromdate, todate);
            //Assert.IsInstanceOf<InlineResponse20026> (response, "response is InlineResponse20026");
        }
        
        /// <summary>
        /// Test GetTrackedEmailCounts
        /// </summary>
        [Test]
        public void GetTrackedEmailCountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string xTrxApiKey = null;
            //string tag = null;
            //string fromdate = null;
            //string todate = null;
            //var response = instance.GetTrackedEmailCounts(accept, xTrxApiKey, tag, fromdate, todate);
            //Assert.IsInstanceOf<InlineResponse20027> (response, "response is InlineResponse20027");
        }
        
    }

}
